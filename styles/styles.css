@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Goudy Bookletter 1911";
  src: url("./fonts/GoudyBookletter1911.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Lato-Regular";
  src: url("./fonts/Lato-Regular.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-dark: #191A23;
  --color-light: #FFFFFF;
  --color-accent: #B9FF66;
  --font-family-base: "Lato", sans-serif;
  --font-family-content: "Goudy Bookletter 1911", sans-serif;
  --container-width: 1240px;
  --container-padding-x: 20px;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
body {
  font-family: var(--font-family-base);
}

.logo {
  filter: drop-shadow(0px 0px 2px rgba(234, 0, 255, 0.5));
}

.header__inner {
  margin-top: 20px;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 60px;
  background-color: rgba(255, 255, 255, 0.54);
  border: 2px outset rgba(234, 0, 255, 0.2);
  border-radius: 25px;
  -webkit-backdrop-filter: blur(3px);
          backdrop-filter: blur(3px);
  box-shadow: 0 0 30px 6px rgba(0, 0, 0, 0.15), inset 0 0 24px 3px rgba(0, 0, 0, 0.1);
  z-index: 1;
}
.header__inner .button__inner {
  position: absolute;
  right: 5px;
  height: 42px;
}
.header__inner .button-auth {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 70px;
  height: 100%;
  color: #000000;
  padding: 10px;
  font-size: 14px;
  border-radius: 18px;
  background: #ffffff;
  cursor: pointer;
  border: 2px outset rgba(234, 0, 255, 0.2);
  transition-duration: 0.3s;
  box-shadow: 0 0 12px 1px rgba(0, 0, 0, 0.1), inset 0 0 12px 0 rgba(0, 0, 0, 0.1);
}
@media (hover: hover) {
  .header__inner .button-auth:hover {
    border-color: rgba(234, 0, 255, 0.5);
    box-shadow: none;
  }
}
@media (hover: none) {
  .header__inner .button-auth:active {
    border-color: rgba(234, 0, 255, 0.5);
    box-shadow: none;
  }
}

body {
  background: linear-gradient(270deg, #faddd4, #d7f8f0, #f8e2ea, #def6ff);
  background-size: 400% 400%;
  animation: gradient 15s ease infinite;
  overflow: hidden;
  z-index: 1;
}

.content__body {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: relative;
  margin-top: 60px;
  height: 100%;
  z-index: 1;
}

.button {
  padding: 0;
  background-color: transparent;
  border: none;
  position: relative;
  width: 60px;
  height: 36px;
  font-size: 14px;
  border-radius: 24px;
  cursor: pointer;
  transition-duration: 0.2s;
}
.button--active {
  background-color: rgba(255, 115, 216, 0.3);
  border-color: rgba(255, 115, 216, 0.4);
  box-shadow: 0 0 12px 2px rgb(255, 115, 216);
}
.button--inactive {
  background-color: rgba(251, 194, 235, 0.6);
  border-color: rgb(251, 194, 235);
}
.button--fill {
  color: rgba(0, 0, 0, 0.6);
  background-color: rgba(251, 194, 235, 0.2);
  border-color: rgba(251, 194, 235, 0.3);
}
@media (hover: hover) {
  .button:hover {
    transform: translateY(-3px);
  }
}
@media (hover: none) {
  .button:active {
    transform: translateY(-3px);
  }
}

.button-list {
  width: 340px;
  height: 48px;
  background-color: white;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 10px;
       column-gap: 10px;
  background-color: rgba(255, 255, 255, 0.3);
  border-radius: 30px;
  -webkit-backdrop-filter: blur(6px);
          backdrop-filter: blur(6px);
  box-shadow: 0 0 12px 2px rgba(0, 0, 0, 0.1);
}

.content__wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 10px 10px;
  border-radius: 24px;
  margin-top: 20px;
  height: 100%;
  width: 100%;
  gap: 20px;
  background-color: rgba(255, 255, 255, 0.6);
  box-shadow: 0 0 24px 1px rgba(0, 0, 0, 0.15);
  -webkit-backdrop-filter: blur(6px);
          backdrop-filter: blur(6px);
}

.content__main {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.first-page {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 10px;
}

.basic {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 30px;
}
.basic__list {
  display: grid;
  align-items: center;
  row-gap: 5px;
  grid-template: 1fr 1fr/1fr 2.2fr;
}
.basic__list input {
  all: unset;
  width: 80%;
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 24px;
  padding: 0 10px;
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
  border: 2px solid rgba(255, 115, 216, 0);
  transition-duration: 0.2s;
}
@media (hover: hover) {
  .basic__list input:hover {
    border: 2px solid rgba(255, 115, 216, 0.2);
  }
}
@media (hover: none) {
  .basic__list input:active {
    border: 2px solid rgba(255, 115, 216, 0.2);
  }
}/*# sourceMappingURL=styles.css.map */